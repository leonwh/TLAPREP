9 More Stuff

regex
irb(main):003:0> /lab/ =~ "laboratory"
=> 0

irb(main):004:0> /lab/ =~ "laoratory"
=> nil
Shows the index in the string where the appropriate characters appear or returns nil if they are absent

def check_for_lab(word)
  if /lab/ =~  word
    puts word 
  else
    puts "No match on this one!"
  end
end

check_for_lab("laboratory")
check_for_lab("experiment")
check_for_lab(“pans labyrinth”)
check_for_lab(“elaborate”)
check_for_lab("polar bear")
Method
if regex
puts

else
puts
end

end
method call
method call
method call
method call

2 What will the following program print to the screen? What will it return?

def execute(&block)
  block
end

execute { puts "Hello from inside the execute method!" }

nothing prints as the block does not contain the ampersand, does it return a proc? CHECK

3 What is exception handling and what problem does it solve? In the event of a damaging program operation, an exception can give a route to protect the program from damage and records the problem.

# exception_a.rb

begin
  # perform some dangerous operation
rescue
  # do this if operation fails
  # log the error
end

4 Modify the code in exercise 2 to make the block execute properly. Add the block .call

def execute(&block)
  block.call
end

execute { puts "Hello from inside the execute method!" }

5 Why does the following code...
def execute(block)
  block.call
end

execute { puts "Hello from inside the execute method!" } 

Give us the following error when we run it? block.rb1:in `execute': wrong number of arguments (0 for 1) (ArgumentError) from test.rb:5:in `<main>' 
This block lacks the ampersand in the first brackets so it does not pass as a parameter in the method
